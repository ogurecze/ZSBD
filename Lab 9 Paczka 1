CREATE OR REPLACE PACKAGE utilities_pkg IS
    PROCEDURE add_job(p_job_id IN jobs.job_id%TYPE, p_job_title IN jobs.job_title%TYPE);
    PROCEDURE update_job_title(p_job_id IN jobs.job_id%TYPE, p_new_title IN jobs.job_title%TYPE);
    FUNCTION get_job_title(p_job_id IN jobs.job_id%TYPE) RETURN jobs.job_title%TYPE;
    FUNCTION calculate_annual_salary(p_employee_id IN employees.employee_id%TYPE) RETURN NUMBER;
END utilities_pkg;
/

CREATE OR REPLACE PACKAGE BODY utilities_pkg IS
    PROCEDURE add_job(p_job_id IN jobs.job_id%TYPE, p_job_title IN jobs.job_title%TYPE) IS
    BEGIN
        INSERT INTO jobs (job_id, job_title) VALUES (p_job_id, p_job_title);
    END;

    PROCEDURE update_job_title(p_job_id IN jobs.job_id%TYPE, p_new_title IN jobs.job_title%TYPE) IS
    BEGIN
        UPDATE jobs SET job_title = p_new_title WHERE job_id = p_job_id;
    END;

    FUNCTION get_job_title(p_job_id IN jobs.job_id%TYPE) RETURN jobs.job_title%TYPE IS
        v_job_title jobs.job_title%TYPE;
    BEGIN
        SELECT job_title INTO v_job_title FROM jobs WHERE job_id = p_job_id;
        RETURN v_job_title;
    END;

    FUNCTION calculate_annual_salary(p_employee_id IN employees.employee_id%TYPE) RETURN NUMBER IS
        v_salary employees.salary%TYPE;
        v_commission employees.commission_pct%TYPE;
    BEGIN
        SELECT salary, NVL(commission_pct, 0) INTO v_salary, v_commission
        FROM employees
        WHERE employee_id = p_employee_id;
        RETURN (v_salary * 12) + (v_salary * v_commission);
    END;
END utilities_pkg;
/
