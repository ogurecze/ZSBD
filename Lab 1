-- 1. Przygotowanie bazy danych

-- Tworzenie tabeli JOBS
CREATE TABLE JOBS (
    job_id INT PRIMARY KEY AUTO_INCREMENT,
    job_title VARCHAR(255) NOT NULL,
    min_salary DECIMAL(10, 2) NOT NULL,
    max_salary DECIMAL(10, 2) NOT NULL,
    CHECK (min_salary < max_salary - 2000)
);

-- Tworzenie tabeli EMPLOYEES
CREATE TABLE EMPLOYEES (
    employee_id INT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    manager_id INT,
    job_id INT,
    FOREIGN KEY (manager_id) REFERENCES EMPLOYEES(employee_id),
    FOREIGN KEY (job_id) REFERENCES JOBS(job_id)
);

-- 2. Dodawanie rekordów do tabeli JOBS
INSERT INTO JOBS (job_title, min_salary, max_salary) VALUES
('Developer', 4000, 7000),
('Analyst', 5000, 8000),
('Manager', 6000, 10000),
('Tester', 3000, 6000);

-- 3. Dodawanie rekordów do tabeli EMPLOYEES
INSERT INTO EMPLOYEES (first_name, last_name, manager_id, job_id) VALUES
('John', 'Doe', NULL, 1),
('Jane', 'Smith', 1, 2),
('Alice', 'Brown', 1, 3),
('Bob', 'Johnson', 1, 4);

-- 4. Zmiana menadżera dla pracowników o ID 2 i 3 na 1
UPDATE EMPLOYEES
SET manager_id = 1
WHERE employee_id IN (2, 3);

-- 5. Zwiększenie minimalnego i maksymalnego wynagrodzenia o 500 dla nazw zawierających 'b' lub 's'
UPDATE JOBS
SET min_salary = min_salary + 500,
    max_salary = max_salary + 500
WHERE job_title LIKE '%b%' OR job_title LIKE '%s%';

-- 6. Usunięcie rekordów z tabeli JOBS, dla których maksymalne zarobki są większe od 9000
DELETE FROM JOBS
WHERE max_salary > 9000;

-- 7. Usunięcie jednej z tabel i próba jej odzyskania
DROP TABLE EMPLOYEES;

-- Aby odzyskać tabelę, można ponownie ją stworzyć lub przywrócić z kopii zapasowej
-- Oto przykład ponownego stworzenia tabeli:
CREATE TABLE EMPLOYEES (
    employee_id INT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    manager_id INT,
    job_id INT,
    FOREIGN KEY (manager_id) REFERENCES EMPLOYEES(employee_id),
    FOREIGN KEY (job_id) REFERENCES JOBS(job_id)
);
