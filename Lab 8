-- 1. Tabela archiwum_departamentów i wyzwalacz na DELETE
CREATE TABLE archiwum_departamentow (
    id NUMBER,
    nazwa VARCHAR2(255),
    data_zamkniecia DATE,
    ostatni_manager VARCHAR2(255)
);

CREATE OR REPLACE TRIGGER trg_archiwum_departamentow
AFTER DELETE ON departments
FOR EACH ROW
BEGIN
    INSERT INTO archiwum_departamentow (id, nazwa, data_zamkniecia, ostatni_manager)
    VALUES (:OLD.department_id, :OLD.department_name, SYSDATE,
            (SELECT first_name || ' ' || last_name 
             FROM employees 
             WHERE employee_id = :OLD.manager_id));
END;
/

-- 2. Widełki wynagrodzeń i logowanie prób poza widełki
CREATE TABLE zlodziej (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER VARCHAR2(255),
    czas_zmiany TIMESTAMP
);

CREATE OR REPLACE TRIGGER trg_check_salary
BEFORE INSERT OR UPDATE ON employees
FOR EACH ROW
BEGIN
    IF :NEW.salary < 2000 OR :NEW.salary > 26000 THEN
        INSERT INTO zlodziej (USER, czas_zmiany)
        VALUES (USER, SYSTIMESTAMP);

        RAISE_APPLICATION_ERROR(-20001, 'Wynagrodzenie poza dozwolonymi widełkami!');
    END IF;
END;
/

-- 3. Sekwencja i wyzwalacz dla auto_increment w tabeli employees
CREATE SEQUENCE emp_seq START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER trg_auto_increment_employees
BEFORE INSERT ON employees
FOR EACH ROW
BEGIN
    IF :NEW.employee_id IS NULL THEN
        SELECT emp_seq.NEXTVAL INTO :NEW.employee_id FROM DUAL;
    END IF;
END;
/

-- 4. Zabronienie operacji na tabeli JOB_GRADES
CREATE OR REPLACE TRIGGER trg_no_modifications_job_grades
BEFORE INSERT OR UPDATE OR DELETE ON job_grades
BEGIN
    RAISE_APPLICATION_ERROR(-20002, 'Operacje na tabeli JOB_GRADES są zabronione!');
END;
/

-- 5. Zachowanie starych wartości max i min salary w tabeli jobs
CREATE OR REPLACE TRIGGER trg_preserve_salary
BEFORE UPDATE ON jobs
FOR EACH ROW
BEGIN
    :NEW.min_salary := :OLD.min_salary;
    :NEW.max_salary := :OLD.max_salary;
END;
/
