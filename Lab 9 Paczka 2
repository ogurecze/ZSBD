CREATE OR REPLACE PACKAGE regions_pkg IS
    PROCEDURE add_region(p_region_id IN regions.region_id%TYPE, p_region_name IN regions.region_name%TYPE);
    PROCEDURE update_region(p_region_id IN regions.region_id%TYPE, p_new_name IN regions.region_name%TYPE);
    PROCEDURE delete_region(p_region_id IN regions.region_id%TYPE);
    FUNCTION get_region_name(p_region_id IN regions.region_id%TYPE) RETURN regions.region_name%TYPE;
END regions_pkg;
/

CREATE OR REPLACE PACKAGE BODY regions_pkg IS
    PROCEDURE add_region(p_region_id IN regions.region_id%TYPE, p_region_name IN regions.region_name%TYPE) IS
    BEGIN
        INSERT INTO regions (region_id, region_name) VALUES (p_region_id, p_region_name);
    END;

    PROCEDURE update_region(p_region_id IN regions.region_id%TYPE, p_new_name IN regions.region_name%TYPE) IS
    BEGIN
        UPDATE regions SET region_name = p_new_name WHERE region_id = p_region_id;
    END;

    PROCEDURE delete_region(p_region_id IN regions.region_id%TYPE) IS
    BEGIN
        DELETE FROM regions WHERE region_id = p_region_id;
    END;

    FUNCTION get_region_name(p_region_id IN regions.region_id%TYPE) RETURN regions.region_name%TYPE IS
        v_region_name regions.region_name%TYPE;
    BEGIN
        SELECT region_name INTO v_region_name FROM regions WHERE region_id = p_region_id;
        RETURN v_region_name;
    END;
END regions_pkg;
/
